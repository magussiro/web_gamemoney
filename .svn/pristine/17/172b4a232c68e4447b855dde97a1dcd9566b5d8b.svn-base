<?php

/**
 * Created by PhpStorm.
 * User: Magus
 * Date: 2017/1/16
 * Time: 上午11:41
 */
require '../class/API.php';
require '../class/JpotData.php';
require '../func/func_member.php';
use \API\API\API;

class JpotRequest extends API
{
    /***
     *
     * Php server回傳:
     * Jp 1~4可抽次數
     * Jp 金額1~4
     * 是否中jp1~4
     *
     * input:
     * api_key:
     * acc:
     * spin_amount:
     * game_id:
     *
     *
     *
     * output:
     * code:
     * get_jpot:0~4
     * jpot_amount:
     *
     *  倍率：1000,避免float不精確的問題
     *
     * 全域廣播:需確認廣播時間
     * 使用活動時間判斷 在目前時間內吐給跑馬燈
     * 四個獎金都是獨立計算 但只有一個中獎
     *
     */
    var $jpotDatas;


    function initJpot()
    {

        $sql = 'select a.accumulation , b.* from jpot as a LEFT outer join jpot_setting as b on a.id = b.jpot_id ';
        $res = $this->admin_db->dbSelectPrepare($sql, []);

        $jpots = [];
        foreach ($res as $jpot) {
            $jp = new JpotData();
            $jp->initData($jpot);
            $jpots[$jpot['jpot_id']] = $jp;
        }
        $this->jpotDatas = $jpots;

    }

    function setJpot(JpotData $jp, $id)
    {

        $this->jpotDatas[$id] = $jp;

    }

    function addJpotAcc($id, $acc_amount)
    {

        return $this->jpotDatas[$id]->addAccumulation($acc_amount);

    }


    function luckyDraw($id, $acc_amount)
    {
        return $this->jpotDatas[$id]->dealLuckyDraw($acc_amount);


    }

    function verifyApiKey($input)
    {
        $sql = 'select api_key from api_setting limit 1 ';
        $res = $this->admin_db->dbSelectPrepare($sql, []);
        $apikey = $this->admin_db->getSingleValue($res);
        return $apikey == $input;

    }

    function saveJpot($id)
    {

        $this->jpotDatas[$id]->saveData();
    }

    function broadCastAdd($acc, $win_jpot_id, $win_amount, $game_id)
    {
        //todo:廣播中獎資訊

        $this->jpotWinRecord($acc, $win_jpot_id, $win_amount, $game_id);

    }

    function jpotWinRecord($acc, $win_jpot_id, $win_amount, $game_id)
    {
//        $this->admin_db = new DB;
        $bank_original = $acc['point'];
        $bank_point = $bank_original + $win_amount;


        mod_member($this->admin_db, ['point' => $bank_point], $acc['id']);
        $sql = 'insert into jpot_win_record';
        $sql_input = [];
        $sql_input['jpot_id']=$win_jpot_id;
        $sql_input['game_id']=$game_id;
        $sql_input['win_amount']=$win_amount;
        $sql_input['member_id']=$acc['id'];
        $sql_input['created_at']=date('Y-m-d H:i:s');

        $this->admin_db->dbInsertPrepare($sql,$sql_input);

    }


    function main()
    {
//        parent::main(); //
        $test_mode = 0;

        if ($test_mode) {

            $spin_input = 4450;
            $acc_input = 'magusmmm';
            $api_key = '1111';
            $game_id = 1;
        } else {

            $spin_input = $_REQUEST['spin_amount'];
            $api_key = $_REQUEST['api_key'];
            $acc_input = $_REQUEST['acc'];
            $game_id = $_REQUEST['game_id'];

        }
        $spin_amount = $spin_input * 100;

        $acc = get_member_by_account($this->admin_db, $acc_input);
        if (!$acc)
            $this->response(['code' => 111, 'desc' => 'account dosent exist']);
        if (!$this->verifyApiKey($api_key)) {
//            $this->recordIlligaleOp();

            $this->response(['code' => 999, 'desc' => 'u dont have permission']);
        }
        $this->initJpot();

        for ($i = 1; $i <= 4; $i++) {
            $this->addJpotAcc($i, $spin_amount);
        }
        $win_jpot_id = 0;
        $win_amount = 0;
        for ($i = 1; $i <= 4; $i++) {
            $win = $this->luckyDraw($i, $spin_amount);
            if ($win) {
                $win_amount = $this->jpotDatas[$i]->getWinAmount();
                $win_jpot_id = $this->jpotDatas[$i]->getJpotId();
                $this->broadCastAdd($acc, $win_jpot_id, $win_amount,$game_id);
//                var_dump('win:' . $win_jpot_id.'win amount'.$win_amount);
                break;
            }
        }
        for ($i = 1; $i <= 4; $i++)
            $this->saveJpot($i);
//        var_dump($this->jpotDatas);
        $this->response([
            'code' => 0,
            'get_jpot' => (int)$win_jpot_id,
            'jpot_amount' => (int)$win_amount
        ]);


    }


}

$api = new JpotRequest();
//for ($i = 0; $i < 100; $i++)
    $api->execute();
