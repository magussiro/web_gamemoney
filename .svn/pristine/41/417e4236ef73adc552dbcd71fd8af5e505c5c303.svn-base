<?php
session_start();
date_default_timezone_set("Asia/Taipei");
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);

include_once("lib/config.php");
include_once("lib/pay2go_inc.php");
include_once("lib/WebDB.php");
include_once("lib/basePage.php");

$viewData = array();

class func_card_deposit extends basePage
{

    public function page_load()
    {
        //是否登入
        //$this->isLogin();

        //get 上有要特別處理的參數
        if (isset($_GET['m'])) {
            switch ($_GET['m']) {
                case    'deposit':
                    $this->deposit();
                    break;
                case    'pay2goinit':
                    $pay2goinit = $this->pay2goInit($_GET['item_id']);
                    break;
                case    'pay2backend':
                    $pay2goinit = $this->pay2goBackend();
                    break;
            }
        }

        //6AN7kfNAuaAeav5M4fER
        //RTveNaFtNcMRW36H5N2M

        //YkhAJ3fcW6t2TFuAMcJA
        //3hWHeehF34Hhheh3ZEfR


        global $viewData;
        $viewData['pay2goinit'] = isset($pay2goinit) ? $pay2goinit : '';
    }

    public function deposit()
    {
        $carno = $_POST['carno'];
        $cardpass = $_POST['cardpass'];

        //用帳號找出會員
        $sql = 'select * from member where account = @account ';
        $member = $this->_db->single_check($sql, array('account' => $_SESSION["fuser_account"]));
        if (!$member)
            $this->alert('無此帳號,請聯絡管理員,卡號未消費');

        //寫入一筆儲值記錄
        $mapData = array();
        $mapData['member_id'] = $member['id'];
        $mapData['type'] = 1;
        $mapData['serial_number'] = $carno;
        $mapData['card_password'] = $cardpass;
        $mapData['points'] = 0;
        $mapData['status'] = 0;
        $mapData['create_date'] = date('Y-m-d H:i:s');
        $OrderID = $this->_db->Insert('card_deposit', $mapData);

        //要送給串接資料
        $ServiceCode = 'JID00171';
        $key = 'aabgguu12311jj';
        $SignCode = md5($OrderID . $key . $ServiceCode);

        $arrData = array();
        $arrData['do'] = 'order';
        $arrData['OrderID'] = $OrderID;
        $arrData['ServiceCode'] = $ServiceCode;
        $arrData['SignCode'] = $SignCode;
        $arrData['UserID'] = $member['id'];
        $arrData['Memo'] = '';
        $arrData['carno'] = $carno;
        $arrData['cardpass'] = $cardpass;

        //回覆
        $response = json_decode($this->httpPost('http://60.199.176.121/JCardAPI/japi.aspx', $arrData), 1);


        $arrDD = array();
        $arrDD['msg'] = $response['msg'];
        $arrDD['update_date'] = date('Y-m-d H:i:s');
        if ($response['prc'] == 1)    //交易成功
        {
            $arrDD['transactionid'] = $response['transactionid'];
            $arrDD['points'] = $response['points'];
            $arrDD['status'] = 1;
            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);

            //更新回使用者資料
            $arrMem = array();
            $arrMem['point'] = $member['point'] + $response['points'];
            $this->_db->Update('member', array('id' => $member['id']), $arrMem);

//            $logArr = [];
//            $logArr['member_id'] = $mapData['member_id'];
            $this->log_deposit($mapData['member_id'], $response['points']);
            $this->alert('儲值成功！');
        } else {
            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);
            $this->alert('儲值失敗，' . $arrDD['msg'] . '！');
        }

    }

    function log_deposit($member_id, $deposit)
    {
        $mapData = [];
        //找出之前紀錄
        $sql = 'select * from card_deposit_sum where member_id = @member_id ';
        $record = $this->_db->single_check($sql, array('member_id' => $member_id));
        if ($record) {
            $original = $record['deposit_sum'];
            $mapData['deposit_sum'] = $original + $deposit;
            $mapData['update_date'] = date("Y-m-d H:i:s");
            $this->_db->Update('card_deposit_sum', array('member_id' => $member_id), $mapData);;
        } else {
            $mapData['member_id'] = $member_id;
            $mapData['deposit_sum'] = $deposit;
            $mapData['create_date'] = date("Y-m-d H:i:s");
            $mapData['update_date'] = date("Y-m-d H:i:s");
            $this->_db->Insert('card_deposit_sum', $mapData);
        }
        return true;


    }

    public function pay2goInit($item_id)
    {

        global $pay2go_setting;
        //用帳號找出會員
        $sql = 'select * from member where account = @account ';
        $member = $this->_db->single_check($sql, array('account' => $_SESSION["fuser_account"]));


        if (!$member)
            $this->alert('無此帳號,請聯絡管理員');

        if (!is_numeric(($item_id)))
            $this->alert('無此商品！');

        $sql_pay2go = "select * from pay2go_items where id = $item_id ";
        $item = $this->_db->single_check($sql_pay2go, []);
        if (!$item)
            $this->alert('無此商品！');


        //order init
        $MerchantOrderNo = uniqid();
        $timestamp = time();
        $HashKey = $pay2go_setting['HashKey'];
        $HashIV = $pay2go_setting['HashIV'];

        /**
         * 將回傳資料其中的四個欄位，分別是 Amt(金額)、MerchantID(商店代號)、
         * MerchantOrderNo(商店訂單編號)、TradeNo(智付寶交易序號)，且參數需照英文字
         * 母 A~Z 排序，若第一字母相同比較第二字母，以此類推。
         *
         */

        $mer_array = array(
            'MerchantID' => $pay2go_setting['MerchantID'],
            'TimeStamp' => $timestamp,
            'MerchantOrderNo' => $MerchantOrderNo,
            'Version' => $pay2go_setting['Version'],
            'Amt' => $item['Amt'],
        );
        ksort($mer_array);
        $check_merstr = http_build_query($mer_array);
        $CheckValue_str =
            "HashKey=$HashKey&$check_merstr&HashIV=$HashIV";
        $CheckValue = strtoupper(hash("sha256", $CheckValue_str));


        $mapData = array();
        $mapData['member_account'] = $_SESSION["fuser_account"];
        $mapData['member_email'] = $member["email"];
        $mapData['MerchantID'] = $pay2go_setting['MerchantID'];
        $mapData['TimeStamp'] = $timestamp;
        $mapData['MerchantOrderNo'] = $MerchantOrderNo;
        $mapData['Version'] = $pay2go_setting['Version'];
        $mapData['Amt'] = $item['Amt'];
        $mapData['CheckValue'] = $CheckValue;
        $mapData['ItemDesc'] = $item['ItemDesc'];

        $init_result = json_encode($mapData);
        $mapData['init_result_json'] = $init_result;
        $InitID = $this->_db->Insert('pay2go_init', $mapData);

        $result = $mapData;
        return $result;

//
//        //要送給串接資料
//        $ServiceCode = 'JID00171';
//        $key = 'aabgguu12311jj';
//        $SignCode = md5($OrderID . $key . $ServiceCode);
//
//        $arrData = array();
//        $arrData['do'] = 'order';
//        $arrData['OrderID'] = $OrderID;
//        $arrData['ServiceCode'] = $ServiceCode;
//        $arrData['SignCode'] = $SignCode;
//        $arrData['UserID'] = $member['id'];
//        $arrData['Memo'] = '';
//        $arrData['carno'] = $carno;
//        $arrData['cardpass'] = $cardpass;
//
//        //回覆
//        $response = json_decode($this->httpPost('http://60.199.176.121/JCardAPI/japi.aspx', $arrData), 1);
//
//
//        $arrDD = array();
//        $arrDD['msg'] = $response['msg'];
//        $arrDD['update_date'] = date('Y-m-d H:i:s');
//        if ($response['prc'] == 1)    //交易成功
//        {
//            $arrDD['transactionid'] = $response['transactionid'];
//            $arrDD['points'] = $response['points'];
//            $arrDD['status'] = 1;
//            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);
//
//            //更新回使用者資料
//            $arrMem = array();
//            $arrMem['point'] = $member['point'] + $response['points'];
//            $this->_db->Update('member', array('id' => $member['id']), $arrMem);
//
////            $logArr = [];
////            $logArr['member_id'] = $mapData['member_id'];
//            $this->log_deposit($mapData['member_id'], $response['points']);
//            $this->alert('儲值成功！');
//        } else {
//            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);
//            $this->alert('儲值失敗，' . $arrDD['msg'] . '！');
//        }

    }

    public function pay2goBackend()
    {
//test pay2go
//        $return = [];
//        $return['MerchantID'] = '316120815';
//        $return['Amt'] = '50';
//        $return['MerchantOrderNo'] = '58b9291fa036c';
//        $return['TradeNo'] = '14061313541640927';
//        $return['Status'] = 'SUCCESS';
//        $return['Message'] = 'Message Test';

//        $return ='{"Status":"SUCCESS","Message":"\u4fe1\u7528\u5361\u6388\u6b0a\u6210\u529f","Result":"{\"MerchantID\":\"316120815\",\"Amt\":50,\"TradeNo\":\"14073109503001857\",\"MerchantOrderNo\":\"58b9291fa036c\",\"RespondType\":\"JSON\",\"CheckCode\":\"C3E6ED72D3641558DA5F701DEFB01B4A9636F1D100F06BEC06027BF5D8873733\",\"PaymentType\":\"CREDIT\",\"RespondCode\":\"54\",\"Auth\":\"\",\"Card6No\":\"457958\",\"Card4No\":\"5509\",\"ECI\":\"\",\"PayTime\":\"2014-07-31 09:50:38\"}"}';


        $_POST['JSONData'] = file_get_contents("pay2gojson.json", false);
        $JSONData = json_decode($_POST['JSONData']);

        $Status = $JSONData->Status;
        $Message = $JSONData->Message;
        $Result = json_decode($JSONData->Result ,true);
        var_dump($Result);

        global $pay2go_setting;

        $HashKey = $pay2go_setting['HashKey'];
        $HashIV = $pay2go_setting['HashIV'];

        $MerchantID = $_POST['MerchantID'];
        $Amt = $_POST['Amt'];
        $MerchantOrderNo = $_POST['MerchantOrderNo'];
        $TradeNo = $_POST['TradeNo'];

//        $sql_pay2go = "select * from pay2go_items where id = $item_id ";
//        $item = $this->_db->single_check($sql_pay2go,[]);

        $check_code = array(
            "MerchantID" => $MerchantID,
            "Amt" => $Amt,
            "MerchantOrderNo" => $MerchantOrderNo,
            "TradeNo" => $TradeNo,
        );
        ksort($check_code);
        $check_str = http_build_query($check_code);
        $CheckCodeFromPay2Go = "HashIV=$HashKey&$check_str&HashKey=$HashIV";
        $CheckCodeFromPay2Go = strtoupper(hash("sha256", $CheckCodeFromPay2Go));

        $sql_pay2go = "select * from pay2go_init where MerchantOrderNo = @MerchantOrderNo ";
        $pay2go = $this->_db->single_check($sql_pay2go, ['MerchantOrderNo' => $MerchantOrderNo]);
        if (!$pay2go)
            $this->alert("沒有此筆交易資訊！");

        $CheckCodeFromDB = $this->getCheckCodeFromDB($pay2go, $TradeNo);
        if ($CheckCodeFromDB !== $CheckCodeFromPay2Go)
            $this->alert("驗證失敗！");
        // $CheckCode驗證 尚未實作
        $mapData = array();

        $mapData['return_post_json'] = json_encode($_POST);
        $mapData['CheckCode'] = $CheckCodeFromPay2Go;
        $mapData['TradeNo'] = $TradeNo;

        $InitID = $this->_db->Update('pay2go_init', $mapData);

        $result = $mapData;
        return $result;

//
//        //要送給串接資料
//        $ServiceCode = 'JID00171';
//        $key = 'aabgguu12311jj';
//        $SignCode = md5($OrderID . $key . $ServiceCode);
//
//        $arrData = array();
//        $arrData['do'] = 'order';
//        $arrData['OrderID'] = $OrderID;
//        $arrData['ServiceCode'] = $ServiceCode;
//        $arrData['SignCode'] = $SignCode;
//        $arrData['UserID'] = $member['id'];
//        $arrData['Memo'] = '';
//        $arrData['carno'] = $carno;
//        $arrData['cardpass'] = $cardpass;
//
//        //回覆
//        $response = json_decode($this->httpPost('http://60.199.176.121/JCardAPI/japi.aspx', $arrData), 1);
//
//
//        $arrDD = array();
//        $arrDD['msg'] = $response['msg'];
//        $arrDD['update_date'] = date('Y-m-d H:i:s');
//        if ($response['prc'] == 1)    //交易成功
//        {
//            $arrDD['transactionid'] = $response['transactionid'];
//            $arrDD['points'] = $response['points'];
//            $arrDD['status'] = 1;
//            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);
//
//            //更新回使用者資料
//            $arrMem = array();
//            $arrMem['point'] = $member['point'] + $response['points'];
//            $this->_db->Update('member', array('id' => $member['id']), $arrMem);
//
////            $logArr = [];
////            $logArr['member_id'] = $mapData['member_id'];
//            $this->log_deposit($mapData['member_id'], $response['points']);
//            $this->alert('儲值成功！');
//        } else {
//            $this->_db->Update('card_deposit', array('id' => $response['orderid']), $arrDD);
//            $this->alert('儲值失敗，' . $arrDD['msg'] . '！');
//        }

    }

    private function getCheckCodeFromDB($pay2go, $TradeNo)
    {

        global $pay2go_setting;

        $HashKey = $pay2go_setting['HashKey'];
        $HashIV = $pay2go_setting['HashIV'];


        $check_code = array(
            "MerchantID" => $pay2go['MerchantID'],
            "Amt" => $pay2go['Amt'],
            "MerchantOrderNo" => $pay2go['MerchantOrderNo'],
            "TradeNo" => $TradeNo,
        );
        ksort($check_code);
        $check_str = http_build_query($check_code);
        $CheckCodeFromDB = "HashIV=$HashKey&$check_str&HashKey=$HashIV";
        $CheckCodeFromDB = strtoupper(hash("sha256", $CheckCodeFromDB));

        return $CheckCodeFromDB;

    }


}

$aa = new func_card_deposit();
$aa->page_load();


?>